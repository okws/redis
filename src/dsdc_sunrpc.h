/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DSDC_SUNRPC_H_RPCGEN
#define _DSDC_SUNRPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum ok_frobber_t {
	MATCHD_FRONTD_FROBBER = 0,
	MATCHD_FRONTD_USERCACHE_FROBBER = 1,
	UBER_USER_OLD_FROBBER = 2,
	PROFILE_STALKER_FROBBER = 3,
	MATCHD_FRONTD_MATCHCACHE_FROBBER = 4,
	GROUP_INFO_FROBBER = 5,
	GTEST_SCORE_FROBBER = 6,
	PTEST_SCORE_FROBBER = 7,
	MTEST_SCORE_FROBBER = 8,
	CUPID_TEST_SCORE_FROBBER = 9,
	GTEST_SESSION_FROBBER = 10,
	PTEST_SESSION_FROBBER = 11,
	MTEST_SESSION_FROBBER = 12,
	MTEST_METADATA_FROBBER = 13,
	MTEST_STATS_FROBBER = 14,
	SETTINGS_FROBBER = 15,
	PROFILE_FUZZY_MATCHES_FROBBER = 16,
	AD_KEYWORD_FROBBER = 17,
};
typedef enum ok_frobber_t ok_frobber_t;

typedef int dsdc_id_t;

typedef u_int dsdc_statval_t;

typedef u_quad_t dsdc_big_statval_t;

struct dsdc_key64_t {
	uint32_t frobber;
	u_int64_t key64;
};
typedef struct dsdc_key64_t dsdc_key64_t;

struct uber_key_t {
	u_int32_t frobber;
	u_int64_t userid;
	u_int load_type;
};
typedef struct uber_key_t uber_key_t;
#define DSDC_KEYSIZE 20
#define DSDC_DEFAULT_PORT 30002

typedef char dsdc_key_t[DSDC_KEYSIZE];

typedef struct {
	u_int dsdc_keyset_t_len;
	dsdc_key_t *dsdc_keyset_t_val;
} dsdc_keyset_t;

enum dsdc_res_t {
	DSDC_OK = 0,
	DSDC_REPLACED = 1,
	DSDC_INSERTED = 2,
	DSDC_NOTFOUND = 3,
	DSDC_NONODE = 4,
	DSDC_ALREADY_REGISTERED = 5,
	DSDC_RPC_ERROR = 6,
	DSDC_DEAD = 7,
	DSDC_LOCKED = 8,
	DSDC_TIMEOUT = 9,
	DSDC_ERRDECODE = 10,
	DSDC_ERRENCODE = 11,
	DSDC_BAD_STATS = 12,
	DSDC_DATA_CHANGED = 13,
	DSDC_DATA_DISAPPEARED = 14,
	DSDC_TOO_BIG = 15,
	DSDC_EXPIRED = 16,
};
typedef enum dsdc_res_t dsdc_res_t;

enum dsdc_annotation_type_t {
	DSDC_NO_ANNOTATION = 0,
	DSDC_CUPID_ANNOTATION = 1,
	DSDC_INT_ANNOTATION = 2,
	DSDC_STR_ANNOTATION = 3,
};
typedef enum dsdc_annotation_type_t dsdc_annotation_type_t;

struct dsdc_annotation_t {
	dsdc_annotation_type_t typ;
	union {
		int i;
		ok_frobber_t frobber;
		char *s;
	} dsdc_annotation_t_u;
};
typedef struct dsdc_annotation_t dsdc_annotation_t;

struct dsdc_histogram_t {
	quad_t scale_factor;
	u_int samples;
	quad_t avg;
	quad_t min;
	quad_t max;
	struct {
		u_int buckets_len;
		u_int *buckets_val;
	} buckets;
	quad_t total;
};
typedef struct dsdc_histogram_t dsdc_histogram_t;

struct dsdc_dataset_t {
	quad_t creations;
	quad_t puts;
	quad_t missed_gets;
	quad_t missed_removes;
	quad_t rm_explicit;
	quad_t rm_make_room;
	quad_t rm_clean;
	quad_t rm_replace;
	u_int duration;
	dsdc_histogram_t gets;
	dsdc_histogram_t objsz;
	dsdc_histogram_t do_gets;
	dsdc_histogram_t do_lifetime;
	dsdc_histogram_t do_objsz;
	dsdc_histogram_t *lifetime;
	quad_t *n_active;
};
typedef struct dsdc_dataset_t dsdc_dataset_t;

struct dsdc_statistic_t {
	dsdc_annotation_t annotation;
	dsdc_dataset_t epoch_data;
	dsdc_dataset_t alltime_data;
};
typedef struct dsdc_statistic_t dsdc_statistic_t;

typedef struct {
	u_int dsdc_statistics_t_len;
	dsdc_statistic_t *dsdc_statistics_t_val;
} dsdc_statistics_t;

struct dsdc_dataset_params_t {
	u_int lifetime_n_buckets;
	u_int gets_n_buckets;
	u_int objsz_n_buckets;
};
typedef struct dsdc_dataset_params_t dsdc_dataset_params_t;

struct dsdc_get_stats_single_arg_t {
	dsdc_dataset_params_t params;
};
typedef struct dsdc_get_stats_single_arg_t dsdc_get_stats_single_arg_t;

typedef char *dsdc_hostname_t;

typedef struct {
	u_int dsdc_hostnames_t_len;
	dsdc_hostname_t *dsdc_hostnames_t_val;
} dsdc_hostnames_t;

enum dsdc_settype_t {
	DSDC_SET_NONE = 0,
	DSDC_SET_ALL = 1,
	DSDC_SET_SOME = 2,
	DSDC_SET_RANDOM = 3,
	DSDC_SET_FIRST = 4,
};
typedef enum dsdc_settype_t dsdc_settype_t;

struct dsdc_slaveset_t {
	dsdc_settype_t typ;
	union {
		dsdc_hostnames_t some;
	} dsdc_slaveset_t_u;
};
typedef struct dsdc_slaveset_t dsdc_slaveset_t;

struct dsdc_get_stats_arg_t {
	dsdc_slaveset_t hosts;
	dsdc_get_stats_single_arg_t getparams;
};
typedef struct dsdc_get_stats_arg_t dsdc_get_stats_arg_t;

struct dsdc_get_stats_single_res_t {
	dsdc_res_t status;
	union {
		dsdc_statistics_t stats;
	} dsdc_get_stats_single_res_t_u;
};
typedef struct dsdc_get_stats_single_res_t dsdc_get_stats_single_res_t;

struct dsdc_slave_statistic_t {
	dsdc_hostname_t host;
	dsdc_get_stats_single_res_t stats;
};
typedef struct dsdc_slave_statistic_t dsdc_slave_statistic_t;

typedef struct {
	u_int dsdc_slave_statistics_t_len;
	dsdc_slave_statistic_t *dsdc_slave_statistics_t_val;
} dsdc_slave_statistics_t;

struct dsdc_req_t {
	dsdc_key_t key;
	int time_to_expire;
};
typedef struct dsdc_req_t dsdc_req_t;

typedef struct {
	u_int dsdc_custom_t_len;
	char *dsdc_custom_t_val;
} dsdc_custom_t;

struct dsdc_key_template_t {
	u_int id;
	u_int pid;
	u_int port;
	char *hostname;
};
typedef struct dsdc_key_template_t dsdc_key_template_t;

typedef struct {
	u_int dsdc_obj_t_len;
	char *dsdc_obj_t_val;
} dsdc_obj_t;

struct dsdc_put_arg_t {
	dsdc_key_t key;
	dsdc_obj_t obj;
};
typedef struct dsdc_put_arg_t dsdc_put_arg_t;

struct dsdc_get_res_t {
	dsdc_res_t status;
	union {
		dsdc_obj_t obj;
		u_int err;
	} dsdc_get_res_t_u;
};
typedef struct dsdc_get_res_t dsdc_get_res_t;

struct dsdc_mget_1res_t {
	dsdc_key_t key;
	dsdc_get_res_t res;
};
typedef struct dsdc_mget_1res_t dsdc_mget_1res_t;

typedef struct {
	u_int dsdc_mget_res_t_len;
	dsdc_mget_1res_t *dsdc_mget_res_t_val;
} dsdc_mget_res_t;

typedef struct {
	u_int dsdc_mget_arg_t_len;
	dsdc_key_t *dsdc_mget_arg_t_val;
} dsdc_mget_arg_t;

typedef struct {
	u_int dsdc_mget2_arg_t_len;
	dsdc_req_t *dsdc_mget2_arg_t_val;
} dsdc_mget2_arg_t;

typedef dsdc_key_t dsdc_get_arg_t;

struct dsdc_get3_arg_t {
	dsdc_key_t key;
	int time_to_expire;
	dsdc_annotation_t annotation;
};
typedef struct dsdc_get3_arg_t dsdc_get3_arg_t;

typedef struct {
	u_int dsdc_mget3_arg_t_len;
	dsdc_get3_arg_t *dsdc_mget3_arg_t_val;
} dsdc_mget3_arg_t;

struct dsdc_put3_arg_t {
	dsdc_key_t key;
	dsdc_obj_t obj;
	dsdc_annotation_t annotation;
};
typedef struct dsdc_put3_arg_t dsdc_put3_arg_t;

typedef dsdc_key_t dsdc_cksum_t;

struct dsdc_put4_arg_t {
	dsdc_key_t key;
	dsdc_obj_t obj;
	dsdc_annotation_t annotation;
	dsdc_cksum_t *checksum;
};
typedef struct dsdc_put4_arg_t dsdc_put4_arg_t;

struct dsdc_remove3_arg_t {
	dsdc_key_t key;
	dsdc_annotation_t annotation;
};
typedef struct dsdc_remove3_arg_t dsdc_remove3_arg_t;

enum dsdc_slave_type_t {
	DSDC_NORMAL_SLAVE = 0,
	DSDC_REDIS_SLAVE = 1,
};
typedef enum dsdc_slave_type_t dsdc_slave_type_t;

struct dsdcx_slave_t {
	dsdc_keyset_t keys;
	char *hostname;
	int port;
};
typedef struct dsdcx_slave_t dsdcx_slave_t;

struct dsdcx_slave2_t {
	dsdc_keyset_t keys;
	char *hostname;
	int port;
	dsdc_slave_type_t slave_type;
};
typedef struct dsdcx_slave2_t dsdcx_slave2_t;

struct dsdcx_state_t {
	struct {
		u_int slaves_len;
		dsdcx_slave_t *slaves_val;
	} slaves;
	dsdcx_slave_t *lock_server;
};
typedef struct dsdcx_state_t dsdcx_state_t;

struct dsdcx_state2_t {
	struct {
		u_int slaves_len;
		dsdcx_slave2_t *slaves_val;
	} slaves;
	dsdcx_slave_t *lock_server;
};
typedef struct dsdcx_state2_t dsdcx_state2_t;

struct dsdc_register_arg_t {
	dsdcx_slave_t slave;
	bool_t primary;
	bool_t lock_server;
};
typedef struct dsdc_register_arg_t dsdc_register_arg_t;

struct dsdc_register2_arg_t {
	dsdcx_slave2_t slave;
	bool_t primary;
	bool_t lock_server;
};
typedef struct dsdc_register2_arg_t dsdc_register2_arg_t;

struct dsdc_getstate_res_t {
	bool_t needupdate;
	union {
		dsdcx_state_t state;
	} dsdc_getstate_res_t_u;
};
typedef struct dsdc_getstate_res_t dsdc_getstate_res_t;

struct dsdc_getstate2_res_t {
	bool_t needupdate;
	union {
		dsdcx_state2_t state;
	} dsdc_getstate2_res_t_u;
};
typedef struct dsdc_getstate2_res_t dsdc_getstate2_res_t;

struct dsdc_lock_acquire_res_t {
	dsdc_res_t status;
	union {
		u_quad_t lockid;
		u_int err;
	} dsdc_lock_acquire_res_t_u;
};
typedef struct dsdc_lock_acquire_res_t dsdc_lock_acquire_res_t;

struct dsdc_lock_acquire_arg_t {
	dsdc_key_t key;
	bool_t writer;
	bool_t block;
	u_int timeout;
};
typedef struct dsdc_lock_acquire_arg_t dsdc_lock_acquire_arg_t;

struct dsdc_lock_release_arg_t {
	dsdc_key_t key;
	u_quad_t lockid;
};
typedef struct dsdc_lock_release_arg_t dsdc_lock_release_arg_t;

typedef char *aiod_file_t;

typedef struct {
	u_int aiod_files_t_len;
	aiod_file_t *aiod_files_t_val;
} aiod_files_t;

struct aiod_str_to_file_arg_t {
	aiod_file_t file;
	struct {
		u_int data_len;
		char *data_val;
	} data;
	int flags;
	int mode;
	bool_t sync;
	bool_t canfail;
	bool_t atomic;
};
typedef struct aiod_str_to_file_arg_t aiod_str_to_file_arg_t;

struct aiod_file_to_str_res_t {
	int code;
	union {
		struct {
			u_int data_len;
			char *data_val;
		} data;
	} aiod_file_to_str_res_t_u;
};
typedef struct aiod_file_to_str_res_t aiod_file_to_str_res_t;

struct aiod_mkdir_arg_t {
	aiod_file_t file;
	int mode;
};
typedef struct aiod_mkdir_arg_t aiod_mkdir_arg_t;

struct aiod_glob_res_t {
	int code;
	union {
		aiod_files_t files;
	} aiod_glob_res_t_u;
};
typedef struct aiod_glob_res_t aiod_glob_res_t;

struct aiod_glob_arg_t {
	aiod_file_t dir;
	aiod_file_t pattern;
};
typedef struct aiod_glob_arg_t aiod_glob_arg_t;

struct aiod_statvfs_t {
	u_quad_t aiod_f_bsize;
	u_quad_t aiod_f_frsize;
	u_quad_t aiod_f_blocks;
	u_quad_t aiod_f_bfree;
	u_quad_t aiod_f_bavail;
	u_quad_t aiod_f_files;
	u_quad_t aiod_f_ffree;
	u_quad_t aiod_f_favail;
	u_quad_t aiod_f_fsid;
	u_quad_t aiod_f_flag;
	u_quad_t aiod_f_namemax;
};
typedef struct aiod_statvfs_t aiod_statvfs_t;

struct aiod_stat_t {
	u_quad_t aiod_st_dev;
	u_quad_t aiod_st_ino;
	u_quad_t aiod_st_mode;
	u_quad_t aiod_st_nlink;
	u_quad_t aiod_st_uid;
	u_quad_t aiod_st_gid;
	u_quad_t aiod_st_rdev;
	u_quad_t aiod_st_size;
	u_quad_t aiod_st_blksize;
	u_quad_t aiod_st_blocks;
	u_quad_t aiod_st_atime;
	u_quad_t aiod_st_mtime;
	u_quad_t aiod_st_ctime;
};
typedef struct aiod_stat_t aiod_stat_t;

struct aiod_stat_res_t {
	int code;
	union {
		aiod_stat_t stat;
	} aiod_stat_res_t_u;
};
typedef struct aiod_stat_res_t aiod_stat_res_t;

struct aiod_statvfs_res_t {
	int code;
	union {
		aiod_statvfs_t stat;
	} aiod_statvfs_res_t_u;
};
typedef struct aiod_statvfs_res_t aiod_statvfs_res_t;
#define SHA1SZ 20

typedef char checksum_t[SHA1SZ];

struct fscache_file_data_t {
	u_int timestamp;
	struct {
		u_int data_len;
		char *data_val;
	} data;
};
typedef struct fscache_file_data_t fscache_file_data_t;

struct fscache_file_t {
	checksum_t checksum;
	fscache_file_data_t data;
};
typedef struct fscache_file_t fscache_file_t;

#define DSDC_PROG 30002
#define DSDC_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DSDC_NULL 0
extern  void * dsdc_null_1(void *, CLIENT *);
extern  void * dsdc_null_1_svc(void *, struct svc_req *);
#define DSDC_PUT 1
extern  dsdc_res_t * dsdc_put_1(dsdc_put_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_put_1_svc(dsdc_put_arg_t *, struct svc_req *);
#define DSDC_REMOVE 2
extern  dsdc_res_t * dsdc_remove_1(char *, CLIENT *);
extern  dsdc_res_t * dsdc_remove_1_svc(char *, struct svc_req *);
#define DSDC_GET 3
extern  dsdc_get_res_t * dsdc_get_1(char *, CLIENT *);
extern  dsdc_get_res_t * dsdc_get_1_svc(char *, struct svc_req *);
#define DSDC_MGET 4
extern  dsdc_mget_res_t * dsdc_mget_1(dsdc_mget_arg_t *, CLIENT *);
extern  dsdc_mget_res_t * dsdc_mget_1_svc(dsdc_mget_arg_t *, struct svc_req *);
#define DSDC_REGISTER 6
extern  dsdc_res_t * dsdc_register_1(dsdc_register_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_register_1_svc(dsdc_register_arg_t *, struct svc_req *);
#define DSDC_HEARTBEAT 7
extern  dsdc_res_t * dsdc_heartbeat_1(void *, CLIENT *);
extern  dsdc_res_t * dsdc_heartbeat_1_svc(void *, struct svc_req *);
#define DSDC_NEWNODE 8
extern  dsdc_res_t * dsdc_newnode_1(dsdcx_slave_t *, CLIENT *);
extern  dsdc_res_t * dsdc_newnode_1_svc(dsdcx_slave_t *, struct svc_req *);
#define DSDC_GETSTATE 9
extern  dsdc_getstate_res_t * dsdc_getstate_1(char *, CLIENT *);
extern  dsdc_getstate_res_t * dsdc_getstate_1_svc(char *, struct svc_req *);
#define DSDC_LOCK_ACQUIRE 10
extern  dsdc_lock_acquire_res_t * dsdc_lock_acquire_1(dsdc_lock_acquire_arg_t *, CLIENT *);
extern  dsdc_lock_acquire_res_t * dsdc_lock_acquire_1_svc(dsdc_lock_acquire_arg_t *, struct svc_req *);
#define DSDC_LOCK_RELEASE 11
extern  dsdc_res_t * dsdc_lock_release_1(dsdc_lock_release_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_lock_release_1_svc(dsdc_lock_release_arg_t *, struct svc_req *);
#define DSDC_GET2 12
extern  dsdc_get_res_t * dsdc_get2_1(dsdc_req_t *, CLIENT *);
extern  dsdc_get_res_t * dsdc_get2_1_svc(dsdc_req_t *, struct svc_req *);
#define DSDC_MGET2 13
extern  dsdc_mget_res_t * dsdc_mget2_1(dsdc_mget2_arg_t *, CLIENT *);
extern  dsdc_mget_res_t * dsdc_mget2_1_svc(dsdc_mget2_arg_t *, struct svc_req *);
#define DSDC_GET3 14
extern  dsdc_get_res_t * dsdc_get3_1(dsdc_get3_arg_t *, CLIENT *);
extern  dsdc_get_res_t * dsdc_get3_1_svc(dsdc_get3_arg_t *, struct svc_req *);
#define DSDC_MGET3 15
extern  dsdc_mget_res_t * dsdc_mget3_1(dsdc_mget3_arg_t *, CLIENT *);
extern  dsdc_mget_res_t * dsdc_mget3_1_svc(dsdc_mget3_arg_t *, struct svc_req *);
#define DSDC_PUT3 16
extern  dsdc_res_t * dsdc_put3_1(dsdc_put3_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_put3_1_svc(dsdc_put3_arg_t *, struct svc_req *);
#define DSDC_GET_STATS 17
extern  dsdc_slave_statistics_t * dsdc_get_stats_1(dsdc_get_stats_arg_t *, CLIENT *);
extern  dsdc_slave_statistics_t * dsdc_get_stats_1_svc(dsdc_get_stats_arg_t *, struct svc_req *);
#define DSDC_GET_STATS_SINGLE 18
extern  dsdc_get_stats_single_res_t * dsdc_get_stats_single_1(dsdc_get_stats_single_arg_t *, CLIENT *);
extern  dsdc_get_stats_single_res_t * dsdc_get_stats_single_1_svc(dsdc_get_stats_single_arg_t *, struct svc_req *);
#define DSDC_REMOVE3 19
extern  dsdc_res_t * dsdc_remove3_1(dsdc_remove3_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_remove3_1_svc(dsdc_remove3_arg_t *, struct svc_req *);
#define DSDC_SET_STATS_MODE 20
extern  void * dsdc_set_stats_mode_1(bool_t *, CLIENT *);
extern  void * dsdc_set_stats_mode_1_svc(bool_t *, struct svc_req *);
#define DSDC_PUT4 21
extern  dsdc_res_t * dsdc_put4_1(dsdc_put4_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_put4_1_svc(dsdc_put4_arg_t *, struct svc_req *);
#define DSDC_REGISTER2 22
extern  dsdc_res_t * dsdc_register2_1(dsdc_register2_arg_t *, CLIENT *);
extern  dsdc_res_t * dsdc_register2_1_svc(dsdc_register2_arg_t *, struct svc_req *);
#define DSDC_GETSTATE2 23
extern  dsdc_getstate2_res_t * dsdc_getstate2_1(char *, CLIENT *);
extern  dsdc_getstate2_res_t * dsdc_getstate2_1_svc(char *, struct svc_req *);
extern int dsdc_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DSDC_NULL 0
extern  void * dsdc_null_1();
extern  void * dsdc_null_1_svc();
#define DSDC_PUT 1
extern  dsdc_res_t * dsdc_put_1();
extern  dsdc_res_t * dsdc_put_1_svc();
#define DSDC_REMOVE 2
extern  dsdc_res_t * dsdc_remove_1();
extern  dsdc_res_t * dsdc_remove_1_svc();
#define DSDC_GET 3
extern  dsdc_get_res_t * dsdc_get_1();
extern  dsdc_get_res_t * dsdc_get_1_svc();
#define DSDC_MGET 4
extern  dsdc_mget_res_t * dsdc_mget_1();
extern  dsdc_mget_res_t * dsdc_mget_1_svc();
#define DSDC_REGISTER 6
extern  dsdc_res_t * dsdc_register_1();
extern  dsdc_res_t * dsdc_register_1_svc();
#define DSDC_HEARTBEAT 7
extern  dsdc_res_t * dsdc_heartbeat_1();
extern  dsdc_res_t * dsdc_heartbeat_1_svc();
#define DSDC_NEWNODE 8
extern  dsdc_res_t * dsdc_newnode_1();
extern  dsdc_res_t * dsdc_newnode_1_svc();
#define DSDC_GETSTATE 9
extern  dsdc_getstate_res_t * dsdc_getstate_1();
extern  dsdc_getstate_res_t * dsdc_getstate_1_svc();
#define DSDC_LOCK_ACQUIRE 10
extern  dsdc_lock_acquire_res_t * dsdc_lock_acquire_1();
extern  dsdc_lock_acquire_res_t * dsdc_lock_acquire_1_svc();
#define DSDC_LOCK_RELEASE 11
extern  dsdc_res_t * dsdc_lock_release_1();
extern  dsdc_res_t * dsdc_lock_release_1_svc();
#define DSDC_GET2 12
extern  dsdc_get_res_t * dsdc_get2_1();
extern  dsdc_get_res_t * dsdc_get2_1_svc();
#define DSDC_MGET2 13
extern  dsdc_mget_res_t * dsdc_mget2_1();
extern  dsdc_mget_res_t * dsdc_mget2_1_svc();
#define DSDC_GET3 14
extern  dsdc_get_res_t * dsdc_get3_1();
extern  dsdc_get_res_t * dsdc_get3_1_svc();
#define DSDC_MGET3 15
extern  dsdc_mget_res_t * dsdc_mget3_1();
extern  dsdc_mget_res_t * dsdc_mget3_1_svc();
#define DSDC_PUT3 16
extern  dsdc_res_t * dsdc_put3_1();
extern  dsdc_res_t * dsdc_put3_1_svc();
#define DSDC_GET_STATS 17
extern  dsdc_slave_statistics_t * dsdc_get_stats_1();
extern  dsdc_slave_statistics_t * dsdc_get_stats_1_svc();
#define DSDC_GET_STATS_SINGLE 18
extern  dsdc_get_stats_single_res_t * dsdc_get_stats_single_1();
extern  dsdc_get_stats_single_res_t * dsdc_get_stats_single_1_svc();
#define DSDC_REMOVE3 19
extern  dsdc_res_t * dsdc_remove3_1();
extern  dsdc_res_t * dsdc_remove3_1_svc();
#define DSDC_SET_STATS_MODE 20
extern  void * dsdc_set_stats_mode_1();
extern  void * dsdc_set_stats_mode_1_svc();
#define DSDC_PUT4 21
extern  dsdc_res_t * dsdc_put4_1();
extern  dsdc_res_t * dsdc_put4_1_svc();
#define DSDC_REGISTER2 22
extern  dsdc_res_t * dsdc_register2_1();
extern  dsdc_res_t * dsdc_register2_1_svc();
#define DSDC_GETSTATE2 23
extern  dsdc_getstate2_res_t * dsdc_getstate2_1();
extern  dsdc_getstate2_res_t * dsdc_getstate2_1_svc();
extern int dsdc_prog_1_freeresult ();
#endif /* K&R C */

#define AIOD_PROG 30003
#define AIOD_VERS 2

#if defined(__STDC__) || defined(__cplusplus)
#define AIOD2_NULL 0
extern  void * aiod2_null_2(void *, CLIENT *);
extern  void * aiod2_null_2_svc(void *, struct svc_req *);
#define AIOD2_STR_TO_FILE 1
extern  int * aiod2_str_to_file_2(aiod_str_to_file_arg_t *, CLIENT *);
extern  int * aiod2_str_to_file_2_svc(aiod_str_to_file_arg_t *, struct svc_req *);
#define AIOD2_FILE_TO_STR 2
extern  aiod_file_to_str_res_t * aiod2_file_to_str_2(aiod_file_t *, CLIENT *);
extern  aiod_file_to_str_res_t * aiod2_file_to_str_2_svc(aiod_file_t *, struct svc_req *);
#define AIOD2_REMOVE 3
extern  int * aiod2_remove_2(aiod_file_t *, CLIENT *);
extern  int * aiod2_remove_2_svc(aiod_file_t *, struct svc_req *);
#define AIOD2_MKDIR 4
extern  int * aiod2_mkdir_2(aiod_mkdir_arg_t *, CLIENT *);
extern  int * aiod2_mkdir_2_svc(aiod_mkdir_arg_t *, struct svc_req *);
#define AIOD2_STATVFS 5
extern  aiod_statvfs_res_t * aiod2_statvfs_2(aiod_file_t *, CLIENT *);
extern  aiod_statvfs_res_t * aiod2_statvfs_2_svc(aiod_file_t *, struct svc_req *);
#define AIOD2_STAT 6
extern  aiod_stat_res_t * aiod2_stat_2(aiod_file_t *, CLIENT *);
extern  aiod_stat_res_t * aiod2_stat_2_svc(aiod_file_t *, struct svc_req *);
#define AIOD2_GLOB 7
extern  aiod_glob_res_t * aiod2_glob_2(aiod_glob_arg_t *, CLIENT *);
extern  aiod_glob_res_t * aiod2_glob_2_svc(aiod_glob_arg_t *, struct svc_req *);
extern int aiod_prog_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define AIOD2_NULL 0
extern  void * aiod2_null_2();
extern  void * aiod2_null_2_svc();
#define AIOD2_STR_TO_FILE 1
extern  int * aiod2_str_to_file_2();
extern  int * aiod2_str_to_file_2_svc();
#define AIOD2_FILE_TO_STR 2
extern  aiod_file_to_str_res_t * aiod2_file_to_str_2();
extern  aiod_file_to_str_res_t * aiod2_file_to_str_2_svc();
#define AIOD2_REMOVE 3
extern  int * aiod2_remove_2();
extern  int * aiod2_remove_2_svc();
#define AIOD2_MKDIR 4
extern  int * aiod2_mkdir_2();
extern  int * aiod2_mkdir_2_svc();
#define AIOD2_STATVFS 5
extern  aiod_statvfs_res_t * aiod2_statvfs_2();
extern  aiod_statvfs_res_t * aiod2_statvfs_2_svc();
#define AIOD2_STAT 6
extern  aiod_stat_res_t * aiod2_stat_2();
extern  aiod_stat_res_t * aiod2_stat_2_svc();
#define AIOD2_GLOB 7
extern  aiod_glob_res_t * aiod2_glob_2();
extern  aiod_glob_res_t * aiod2_glob_2_svc();
extern int aiod_prog_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_ok_frobber_t (XDR *, ok_frobber_t*);
extern  bool_t xdr_dsdc_id_t (XDR *, dsdc_id_t*);
extern  bool_t xdr_dsdc_statval_t (XDR *, dsdc_statval_t*);
extern  bool_t xdr_dsdc_big_statval_t (XDR *, dsdc_big_statval_t*);
extern  bool_t xdr_dsdc_key64_t (XDR *, dsdc_key64_t*);
extern  bool_t xdr_uber_key_t (XDR *, uber_key_t*);
extern  bool_t xdr_dsdc_key_t (XDR *, dsdc_key_t);
extern  bool_t xdr_dsdc_keyset_t (XDR *, dsdc_keyset_t*);
extern  bool_t xdr_dsdc_res_t (XDR *, dsdc_res_t*);
extern  bool_t xdr_dsdc_annotation_type_t (XDR *, dsdc_annotation_type_t*);
extern  bool_t xdr_dsdc_annotation_t (XDR *, dsdc_annotation_t*);
extern  bool_t xdr_dsdc_histogram_t (XDR *, dsdc_histogram_t*);
extern  bool_t xdr_dsdc_dataset_t (XDR *, dsdc_dataset_t*);
extern  bool_t xdr_dsdc_statistic_t (XDR *, dsdc_statistic_t*);
extern  bool_t xdr_dsdc_statistics_t (XDR *, dsdc_statistics_t*);
extern  bool_t xdr_dsdc_dataset_params_t (XDR *, dsdc_dataset_params_t*);
extern  bool_t xdr_dsdc_get_stats_single_arg_t (XDR *, dsdc_get_stats_single_arg_t*);
extern  bool_t xdr_dsdc_hostname_t (XDR *, dsdc_hostname_t*);
extern  bool_t xdr_dsdc_hostnames_t (XDR *, dsdc_hostnames_t*);
extern  bool_t xdr_dsdc_settype_t (XDR *, dsdc_settype_t*);
extern  bool_t xdr_dsdc_slaveset_t (XDR *, dsdc_slaveset_t*);
extern  bool_t xdr_dsdc_get_stats_arg_t (XDR *, dsdc_get_stats_arg_t*);
extern  bool_t xdr_dsdc_get_stats_single_res_t (XDR *, dsdc_get_stats_single_res_t*);
extern  bool_t xdr_dsdc_slave_statistic_t (XDR *, dsdc_slave_statistic_t*);
extern  bool_t xdr_dsdc_slave_statistics_t (XDR *, dsdc_slave_statistics_t*);
extern  bool_t xdr_dsdc_req_t (XDR *, dsdc_req_t*);
extern  bool_t xdr_dsdc_custom_t (XDR *, dsdc_custom_t*);
extern  bool_t xdr_dsdc_key_template_t (XDR *, dsdc_key_template_t*);
extern  bool_t xdr_dsdc_obj_t (XDR *, dsdc_obj_t*);
extern  bool_t xdr_dsdc_put_arg_t (XDR *, dsdc_put_arg_t*);
extern  bool_t xdr_dsdc_get_res_t (XDR *, dsdc_get_res_t*);
extern  bool_t xdr_dsdc_mget_1res_t (XDR *, dsdc_mget_1res_t*);
extern  bool_t xdr_dsdc_mget_res_t (XDR *, dsdc_mget_res_t*);
extern  bool_t xdr_dsdc_mget_arg_t (XDR *, dsdc_mget_arg_t*);
extern  bool_t xdr_dsdc_mget2_arg_t (XDR *, dsdc_mget2_arg_t*);
extern  bool_t xdr_dsdc_get_arg_t (XDR *, dsdc_get_arg_t);
extern  bool_t xdr_dsdc_get3_arg_t (XDR *, dsdc_get3_arg_t*);
extern  bool_t xdr_dsdc_mget3_arg_t (XDR *, dsdc_mget3_arg_t*);
extern  bool_t xdr_dsdc_put3_arg_t (XDR *, dsdc_put3_arg_t*);
extern  bool_t xdr_dsdc_cksum_t (XDR *, dsdc_cksum_t);
extern  bool_t xdr_dsdc_put4_arg_t (XDR *, dsdc_put4_arg_t*);
extern  bool_t xdr_dsdc_remove3_arg_t (XDR *, dsdc_remove3_arg_t*);
extern  bool_t xdr_dsdc_slave_type_t (XDR *, dsdc_slave_type_t*);
extern  bool_t xdr_dsdcx_slave_t (XDR *, dsdcx_slave_t*);
extern  bool_t xdr_dsdcx_slave2_t (XDR *, dsdcx_slave2_t*);
extern  bool_t xdr_dsdcx_state_t (XDR *, dsdcx_state_t*);
extern  bool_t xdr_dsdcx_state2_t (XDR *, dsdcx_state2_t*);
extern  bool_t xdr_dsdc_register_arg_t (XDR *, dsdc_register_arg_t*);
extern  bool_t xdr_dsdc_register2_arg_t (XDR *, dsdc_register2_arg_t*);
extern  bool_t xdr_dsdc_getstate_res_t (XDR *, dsdc_getstate_res_t*);
extern  bool_t xdr_dsdc_getstate2_res_t (XDR *, dsdc_getstate2_res_t*);
extern  bool_t xdr_dsdc_lock_acquire_res_t (XDR *, dsdc_lock_acquire_res_t*);
extern  bool_t xdr_dsdc_lock_acquire_arg_t (XDR *, dsdc_lock_acquire_arg_t*);
extern  bool_t xdr_dsdc_lock_release_arg_t (XDR *, dsdc_lock_release_arg_t*);
extern  bool_t xdr_aiod_file_t (XDR *, aiod_file_t*);
extern  bool_t xdr_aiod_files_t (XDR *, aiod_files_t*);
extern  bool_t xdr_aiod_str_to_file_arg_t (XDR *, aiod_str_to_file_arg_t*);
extern  bool_t xdr_aiod_file_to_str_res_t (XDR *, aiod_file_to_str_res_t*);
extern  bool_t xdr_aiod_mkdir_arg_t (XDR *, aiod_mkdir_arg_t*);
extern  bool_t xdr_aiod_glob_res_t (XDR *, aiod_glob_res_t*);
extern  bool_t xdr_aiod_glob_arg_t (XDR *, aiod_glob_arg_t*);
extern  bool_t xdr_aiod_statvfs_t (XDR *, aiod_statvfs_t*);
extern  bool_t xdr_aiod_stat_t (XDR *, aiod_stat_t*);
extern  bool_t xdr_aiod_stat_res_t (XDR *, aiod_stat_res_t*);
extern  bool_t xdr_aiod_statvfs_res_t (XDR *, aiod_statvfs_res_t*);
extern  bool_t xdr_checksum_t (XDR *, checksum_t);
extern  bool_t xdr_fscache_file_data_t (XDR *, fscache_file_data_t*);
extern  bool_t xdr_fscache_file_t (XDR *, fscache_file_t*);

#else /* K&R C */
extern bool_t xdr_ok_frobber_t ();
extern bool_t xdr_dsdc_id_t ();
extern bool_t xdr_dsdc_statval_t ();
extern bool_t xdr_dsdc_big_statval_t ();
extern bool_t xdr_dsdc_key64_t ();
extern bool_t xdr_uber_key_t ();
extern bool_t xdr_dsdc_key_t ();
extern bool_t xdr_dsdc_keyset_t ();
extern bool_t xdr_dsdc_res_t ();
extern bool_t xdr_dsdc_annotation_type_t ();
extern bool_t xdr_dsdc_annotation_t ();
extern bool_t xdr_dsdc_histogram_t ();
extern bool_t xdr_dsdc_dataset_t ();
extern bool_t xdr_dsdc_statistic_t ();
extern bool_t xdr_dsdc_statistics_t ();
extern bool_t xdr_dsdc_dataset_params_t ();
extern bool_t xdr_dsdc_get_stats_single_arg_t ();
extern bool_t xdr_dsdc_hostname_t ();
extern bool_t xdr_dsdc_hostnames_t ();
extern bool_t xdr_dsdc_settype_t ();
extern bool_t xdr_dsdc_slaveset_t ();
extern bool_t xdr_dsdc_get_stats_arg_t ();
extern bool_t xdr_dsdc_get_stats_single_res_t ();
extern bool_t xdr_dsdc_slave_statistic_t ();
extern bool_t xdr_dsdc_slave_statistics_t ();
extern bool_t xdr_dsdc_req_t ();
extern bool_t xdr_dsdc_custom_t ();
extern bool_t xdr_dsdc_key_template_t ();
extern bool_t xdr_dsdc_obj_t ();
extern bool_t xdr_dsdc_put_arg_t ();
extern bool_t xdr_dsdc_get_res_t ();
extern bool_t xdr_dsdc_mget_1res_t ();
extern bool_t xdr_dsdc_mget_res_t ();
extern bool_t xdr_dsdc_mget_arg_t ();
extern bool_t xdr_dsdc_mget2_arg_t ();
extern bool_t xdr_dsdc_get_arg_t ();
extern bool_t xdr_dsdc_get3_arg_t ();
extern bool_t xdr_dsdc_mget3_arg_t ();
extern bool_t xdr_dsdc_put3_arg_t ();
extern bool_t xdr_dsdc_cksum_t ();
extern bool_t xdr_dsdc_put4_arg_t ();
extern bool_t xdr_dsdc_remove3_arg_t ();
extern bool_t xdr_dsdc_slave_type_t ();
extern bool_t xdr_dsdcx_slave_t ();
extern bool_t xdr_dsdcx_slave2_t ();
extern bool_t xdr_dsdcx_state_t ();
extern bool_t xdr_dsdcx_state2_t ();
extern bool_t xdr_dsdc_register_arg_t ();
extern bool_t xdr_dsdc_register2_arg_t ();
extern bool_t xdr_dsdc_getstate_res_t ();
extern bool_t xdr_dsdc_getstate2_res_t ();
extern bool_t xdr_dsdc_lock_acquire_res_t ();
extern bool_t xdr_dsdc_lock_acquire_arg_t ();
extern bool_t xdr_dsdc_lock_release_arg_t ();
extern bool_t xdr_aiod_file_t ();
extern bool_t xdr_aiod_files_t ();
extern bool_t xdr_aiod_str_to_file_arg_t ();
extern bool_t xdr_aiod_file_to_str_res_t ();
extern bool_t xdr_aiod_mkdir_arg_t ();
extern bool_t xdr_aiod_glob_res_t ();
extern bool_t xdr_aiod_glob_arg_t ();
extern bool_t xdr_aiod_statvfs_t ();
extern bool_t xdr_aiod_stat_t ();
extern bool_t xdr_aiod_stat_res_t ();
extern bool_t xdr_aiod_statvfs_res_t ();
extern bool_t xdr_checksum_t ();
extern bool_t xdr_fscache_file_data_t ();
extern bool_t xdr_fscache_file_t ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DSDC_SUNRPC_H_RPCGEN */
